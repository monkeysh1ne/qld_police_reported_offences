add_osm_feature(key = "leisure",
value = c("park", "nature_reserve", "golf course")) %>%
# we want to extract "leisure" features that are park, nature reserve or golf course
osmdata_sf() %>%
# query OSM and retun simple features (sf)
trim_osmdata(city_polygon)
View(greensp_osm)
greensp_osm
# In our results, polygons and multipolygons are likely of interest. Let's have a look
glimpse(greensp_osm$osm_polygons)
glimpse(greensp_osm$osm_multipolygons)
# Convert POLYGON to MULTIPOLYGON and bind into one sf object.
greensp_sf <- bind_rows(st_cast(greensp_osm$osm_polygons, "MULTIPOLYGON"),
greensp_osm$osm_multipolygons) %>%
select(name, osm_id, leisure)
View(greensp_sf)
# Plot coloured by the value of leisure
plot(greensp_sf["leisure"])
View(city_polygon)
?getbb
install.packages("leaflet")
install.packages("leaflet")
#############################################################
# Leaflet package muck about
library("leaflet")
library(tidyverse)
?msleep
glimpse(msleep)
view(msleep)
# rename a var
msleep %>%
rename("conservation" = "conserv")
# rename a var
msleep %>%
rename("conserv" = "conservation")
view(msleep)
view(msleep)
# rename a var
msleep %>%
rename("conserv" = "conservation")
# rename a var
msleep %>%
rename("conserv" = "conservation") %>%
gimpse()
# rename a var
msleep %>%
rename("conserv" = "conservation") %>%
glimpse()
# reorder vars
msleep %>%
select(vore, name, everything())
# reorder vars
msleep %>%
select(vore, name, everything()) %>%
glimpse()
# reorder vars
msleep %>%
select(vore, name, awake, everything()) %>%
glimpse()
# change a variable type
class(msleep$vore)
msleep$vore <- as.factor(msleep$vore)
# change a variable type
class(msleep$vore)
# alternatively ..
msleep %>%
mutate(vore = as.character(vore)) %>%
glimpse()
# select vars to work with
names(msleep)
select(2:4)
select(2:4,
awake,
starts_with("sleep"),
contains("wt")) %>%
names()
msleep %>%
select(2:4,
awake,
starts_with("sleep"),
contains("wt")) %>%
names()
msleep() %>%
select(2:4) %>%
names()
msleep %>%
select(2:4) %>%
names()
msleep %>%
select(1:4) %>%
names()
msleep %>%
select(everything()) %>%
names()
# Filter and arrange data
unique(msleep$order)
%>%
msleep %>%
filter((order == "Carnivora" | order == "Primates") &
sleep_total > 8) %>%
select(name, order, sleep_total) %>%
arrange(~sleep_total) %>%
View
msleep %>%
filter((order == "Carnivora" | order == "Primates") &
sleep_total > 8) %>%
select(name, order, sleep_total) %>%
arrange(-sleep_total) %>%
View
msleep %>%
filter((order == "Carnivora" | order == "Primates") &
sleep_total > 8) %>%
select(name, order, sleep_total) %>%
arrange(-sleep_total) %>%
View
unique(order)
unique(msleep$order)
msleep %>%
filter((order == "Carnivora" | order == "Pilosa") &
sleep_total > 8) %>%
select(name, order, sleep_total) %>%
arrange(-sleep_total) %>%
View
msleep %>%
filter((order == "Carnivora" | order == "Pilosa") &
sleep_total > 8) %>%
select(name, order, sleep_total) %>%
arrange(sleep_total) %>%
View
msleep %>%
filter((order %in% ("Carnivora" "Pilosa" "Primates")) &
msleep %>%
filter((order %in% c("Carnivora", "Pilosa", "Primates")) &
sleep_total > 8) %>%
select(name, order, sleep_total) %>%
arrange(sleep_total) %>%
View
msleep %>%
filter((order %in% c("Carnivora", "Pilosa", "Primates")) &
sleep_total > 8) %>%
select(name, order, sleep_total) %>%
arrange(sleep_total) %>%
View
msleep %>%
filter((order %in% c("Carnivora", "Pilosa", "Primates")) &
sleep_total > 8) %>%
select(name, order, sleep_total) %>%
arrange(-sleep_total) %>%
View
View(msleep)
msleep %>%
filter(
(order %in% c("Carnivora", "Pilosa", "Primates")) &
(sleep_total > 8) &
(bodywt < 100)
) %>%
select(name, order, sleep_total) %>%
arrange(-sleep_total) %>%
View
msleep %>%
filter(
(order %in% c("Carnivora", "Pilosa", "Primates")) &
(sleep_total > 8) &
(bodywt < 100)
) %>%
select(name, order, sleep_total, bodywt) %>%
arrange(-sleep_total) %>%
View
msleep %>%
filter(
(order %in% c("Carnivora", "Pilosa", "Primates")) &
(sleep_total > 8) &
(bodywt < 50)
) %>%
select(name, order, sleep_total, bodywt) %>%
arrange(-sleep_total) %>%
View
msleep %>%
filter(
(order %in% c("Carnivora", "Pilosa", "Primates")) &
(sleep_total > 8) &
(bodywt < 50)
) %>%
select(name, order, sleep_total, bodywt) %>%
arrange(-) %>% bodywt
msleep %>%
filter(
(order %in% c("Carnivora", "Pilosa", "Primates")) &
(sleep_total > 8) &
(bodywt < 50)
) %>%
select(name, order, sleep_total, bodywt) %>%
arrange(-bodywt) %>%
View
size_of_brain <- msleep %>%
select(name, brainwt) %>%
drop_na(brainwt) %>%
mutate(brain_size = if_else(brainwt > 0.01, "large", "small"))
size_of_brain
size_of_brain %>%
mutate(brain_size = recode(brain_size, "large" = 1, "small" = 2))
getwd()
aus_votes_23 <- read.csv("aus_historical_first_pref_votes_at_2023.csv")
aus_votes_23
dim(aus_votes_23)
getOption("max.print")
View(aus_votes_23)
names(aus_votes_23)
?select()
library(tidyverse)
?select()
qld_votes_23 <- select(aus_votes_23$State == "QLD", everything())
qld_votes_23 <- select(aus_votes_23$State == "QLD")
aus_votes_23 %>%
select(State == "QLD")
aus_votes_23[aus_votes_23$State == "QLD"]
names(aus_votes_23)
dim(aus_votes_23)
str(aus_votes_23)
aus_votes_23[aus_votes_23$State == "QLD"]
aus_votes_23[aus_votes_23$State == "QLD",]
qld_votes_23 <- aus_votes_23[aus_votes_23$State == "QLD",]
names(qld_votes_23)
glimpse(qld_votes_23)
dim(qld_votes_23)
names(qld_votes_23)
qld_votes_23 %>%
rename("DivName" == "DivisionName") %>%
glimpse()
qld_votes_23 %>%
rename("DivName" = "DivisionName") %>%
glimpse()
qld_votes_23 %>%
rename("DivName" = "DivisionName") %>%
rename("DivAbbr" = "DivisionAb") %>%
glimpse()
qld_votes_23 %>%
rename("DivName" = "DivisionName") %>%
rename("DivAbbr" = "DivisionAb") %>%
rename("PartyAbbr" = "PartyAb") %>%
glimpse()
unique(qld_votes_23$PartyAb)
# view obs with missing data
qld_votes_23[!complete.cases(qld_votes_23),]
View(qld_votes_23)
aus_votes_23 <- read.csv("aus_historical_first_pref_votes_at_2023.csv"header=T, na.strings=c("","NA"))
aus_votes_23 <- read.csv("aus_historical_first_pref_votes_at_2023.csv", header=T, na.strings=c("","NA"))
aus_votes_23
View(aus_votes_23)
aus_votes_23[aus_votes_23$State == "QLD",]
qld_votes_23 <- aus_votes_23[aus_votes_23$State == "QLD",]
names(qld_votes_23)
glimpse(qld_votes_23)
dim(qld_votes_23)
qld_votes_23 %>%
rename("DivName" = "DivisionName") %>%
rename("DivAbbr" = "DivisionAb") %>%
rename("PartyAbbr" = "PartyAb") %>%
glimpse()
# view obs with missing data
qld_votes_23[!complete.cases(qld_votes_23),]
qld_votes_23 %>%
select(State, DivisionName, PartyAb, CandidateSurname, Votes) %>%
filter(!complete.cases(.))
qld_informal <- qld_votes_23(is.na(PartyAb))
qld_informal[is.na(PartyAb),]
qld_informal <- qld_votes_23[is.na(PartyAb),]
qld_informal <- qld_votes_23[is.na(qld_votes_23$PartyAb),]
View(qld_informal)
# plot qld 2023 first pref votes on chart grouped by party abreviation.
qld_votes_23 %>%
group_by(PartyAb)
# plot qld 2023 first pref votes on chart grouped by party abreviation.
qld_votes_23 %>%
group_by(PartyAb) %>%
view
View(qld_votes_23)
# plot qld 2023 first pref votes on chart grouped by party abreviation.
qld_votes_23 %>%
group_by(qld_votes_23$PartyAb) %>%
view
qld_votes_23 %>%
group_by(PartyAb) %>%
view
qld_votes_23 %>%
group_by(PartyAb) %>%
view
unique(qld_votes_23$PartyAb)
qld_votes_23
qld_votes_23 %>%
group_by(PartyAb)
qld_votes_23 %>%
select(State, DivisionName, PartyAb, CandidateSurname, Votes)
qld_votes_23 %>%
group_by(PartyAb) %>%
view
qld_votes_23 %>%
group_by(DivisionName) %>%
view
qld_votes_23 %>%
group_by(DivisionName) %>%
group_by(PartyAb) %>%
view
qld_votes_23 %>%
group_by(DivisionName) %>%
group_by(PartyAb) %>%
group_by(CandidateSurname) %>%
view
qld_votes_23 %>%
ggplot(aes(Votes, fill = PartyAb))+
geom_bar(position = "dodge",
alpha = 0.5)+
theme_bw()
qld_votes_23 %>%
ggplot(aes(PartyAb, fill = Votes))+
geom_bar(position = "dodge",
alpha = 0.5)+
theme_bw()
qld_votes_23 %>%
ggplot(aes(Votes, fill = PartyAb))+
geom_bar(position = "dodge",
alpha = 0.5)+
theme_bw()
ggplot(data = qld_votes_23,
mapping = aes(x = DivisionName,
y = Votes))+
geom_bar()
ggplot(data = qld_votes_23,
mapping = aes(x = DivisionName,
y = Votes))+
geom_point()
names(qld_votes_23)
qld_votes_23 %>%
ggplot(aes(DivisionName, Votes, colour = PartyAb))+
geom_point()
qld_votes_23 %>%
ggplot(aes(DivisionAb, Votes, colour = PartyAb))+
geom_point()
qld_votes_23 %>%
ggplot(aes(DivisionAb, Votes, colour = PartyAb))+
geom_bar()
point
qld_votes_23 %>%
ggplot(aes(DivisionAb, Votes, colour = PartyAb))+
geom_point()
qld_votes_23 %>%
ggplot(aes(PartyAb, Votes))+
geom_point(aes(size = Votes))
qld_votes_23 %>%
ggplot(aes(PartyAb, Votes))+
geom_point(aes(size = Votes, color = PartyAb))
qld_votes_23 %>%
ggplot(aes(PartyAb, Votes))+
geom_point(aes(size = Votes, color = PartyAb))+
labs(title = "Australia QLD First Pref Votes 2023 by Party")
names(qld_votes_23)
qld_votes_23 %>%
ggplot(aes(PartyAb, Votes))+
geom_point(aes(size = Votes, color = PartyAb))+
facet_wrap(~DivisionAb)+
labs(title = "Australia QLD First Pref Votes 2023 by Party")
qld_votes_23 %>%
ggplot(aes(PartyAb, Votes))+
geom_point(aes(size = Votes, color = PartyAb))+
labs(title = "Australia QLD First Pref Votes 2023 by Party")
library(data.table)
library(tidyverse)
# read in data from CSV source.
setwd("~/r_dev/Playground/queensland_offenses")
df <- read_csv("data/division_Reported_Offences_Number.csv")
# Wrangle data.
# create the Year col
df$dmy <- dmy(paste("01", df$`Month Year`, sep = ""), tz = "Australia/Brisbane")
df$dmy <- as_date(df$dmy)
df$year <- strftime(df$dmy, "%Y")    # create Year col (char).
df$year <- as.numeric(df$year)
# drop un-needed cols
df <- df %>%
select(-c(`Month Year`, dmy))
# convert offence colnames to values under new column 'offence'
df$offense <- as.numeric(0)
str(df)
names(df)
df <- df[-92]
names(df)
class(df$Division)
class(year)
class(df$year)
# convert offence colnames to values under new column 'offence'
df$offense <- as.numeric(0)
myCols <-unique(names(df))
# remove Division, year & offence cols
myCols <- myCols[-c(1,91,92)]
# create temp copy of dataframe to work on.
temp <- df
tempTF <- temp %>%
# pivot_longer(all_of(myCols), names_to = "offence", values_to = "off_count")
pivot_longer(all_of(myCols), names_to = "offence", values_to = "off_count" )
names(tempTF)
head(tempTF, 20)
head(tempTF, 200)
head(tempTF, 180)
`print(n = 200)`
print(n = 200)
head(tempTF, 180,print(n = 200))
head(tempTF, 180) %>% print(n = 200)
head(tempTF, 200) %>% print(n = 200)
divYear <- temp %>%
select(Division, year)
head(divYear)
# aggregate data - totals for each offence for each year for each division.
agg <- df %>%
group_by(Division, year) %>%
summarise(across(everything(), sum))
head(agg)
# aggregate data - totals for each offence for each year for each division.
agg <- df %>%
group_by(Division, year) %>%
summarise(across(everything(), sum)) %>%
pivot_longer(-c(Division, year), names_to = "offence", values_to = "off_count" )
head(agg)
head(agg, 200) %>% print(n = 200)
write.csv(agg, "agg.csv", row.names=TRUE)
write.csv(df, "df.csv", row.names=TRUE)
library(data.table)
library(tidyverse)
# read in data from CSV source.
setwd("~/r_dev/Playground/queensland_offenses")
df <- read_csv("data/division_Reported_Offences_Number.csv")
# Wrangle data.
# create the Year col
df$dmy <- dmy(paste("01", df$`Month Year`, sep = ""), tz = "Australia/Brisbane")
df$dmy <- as_date(df$dmy)
df$year <- strftime(df$dmy, "%Y")    # create Year col (char).
df$year <- as.numeric(df$year)
# drop un-needed cols
df <- df %>%
select(-c(`Month Year`, dmy))
# convert offence colnames to values under new column 'offence'
df$offense <- as.numeric(0)
myCols <-unique(names(df))
# remove Division, year & offence cols
myCols <- myCols[-c(1,91,92)]
# create temp copy of dataframe to work on.
temp <- df
# aggregate data - totals for each offence for each year for each division.
agg <- temp %>%
group_by(Division, year) %>%
summarise(across(everything(), sum)) %>%
pivot_longer(-c(Division, year), names_to = "offence", values_to = "off_count" )
write.csv(agg, "agg.csv", row.names=TRUE)
library(data.table)
library(tidyverse)
# read in data from CSV source.
setwd("~/r_dev/Playground/queensland_offenses")
df <- read_csv("data/division_Reported_Offences_Number.csv")
# Wrangle data.
# create the Year col
df$dmy <- dmy(paste("01", df$`Month Year`, sep = ""), tz = "Australia/Brisbane")
df$dmy <- as_date(df$dmy)
df$year <- strftime(df$dmy, "%Y")    # create Year col (char).
df$year <- as.numeric(df$year)
# drop un-needed cols
df <- df %>%
select(-c(`Month Year`, dmy))
# aggregate data - totals for each offence for each year for each division.
agg <- temp %>%
group_by(Division, year) %>%
summarise(across(everything(), sum)) %>%
pivot_longer(-c(Division, year), names_to = "offence", values_to = "off_count" )
# aggregate data - totals for each offence for each year for each division.
agg <- df %>%
group_by(Division, year) %>%
summarise(across(everything(), sum)) %>%
pivot_longer(-c(Division, year), names_to = "offence", values_to = "off_count" )
# write output to CSV file
write.csv(agg, "agg.csv", row.names=TRUE)
# write data to RDS file
write_rds(agg, "agg.RDS")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
names(agg)
head(agg)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("DT")
library(DT)
runApp()
runApp()
runApp()
runApp()
off <- unique(agg$off)
runApp()
runApp()
runApp()
